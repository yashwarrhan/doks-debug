name: Generate Vulnerability Reports

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Generate Reports
      run: |
        import csv
        import json
        import os

        # Sample data mimicking vulnerabilities detected
        vulnerabilities = [
          {"issue": "Privileged container", "severity": "High", "file": "daemonset.yaml", "line": "20", "suggestion": "Set 'privileged: false' in your container securityContext."},
          {"issue": "Docker socket mount", "severity": "High", "file": "daemonset.yaml", "line": "35", "suggestion": "Remove the mount of '/var/run/docker.sock'."},
          {"issue": "Host network usage", "severity": "Medium", "file": "daemonset.yaml", "line": "25", "suggestion": "Set 'hostNetwork: false'."},
          {"issue": "Host PID usage", "severity": "Medium", "file": "daemonset.yaml", "line": "22", "suggestion": "Set 'hostPID: false'."},
          {"issue": "Unrestricted root user", "severity": "Medium", "file": "daemonset.yaml", "line": "18", "suggestion": "Define 'runAsNonRoot: true' in securityContext."},
        ]

        # Generate HTML report
        html_content = "<html><head><title>Vulnerability Report</title></head><body>"
        html_content += "<h1>Vulnerability Report</h1><table border='1'><tr><th>Issue</th><th>Severity</th><th>File</th><th>Line</th><th>Suggestion</th></tr>"
        
        for vuln in vulnerabilities:
            html_content += f"<tr><td>{vuln['issue']}</td><td>{vuln['severity']}</td><td>{vuln['file']}</td><td>{vuln['line']}</td><td>{vuln['suggestion']}</td></tr>"
        
        html_content += "</table></body></html>"
        with open('vulnerability_report.html', 'w') as file:
            file.write(html_content)

        # Generate CSV report
        csv_file = 'vulnerability_report.csv'
        with open(csv_file, mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(['Issue', 'Severity', 'File', 'Line', 'Suggestion'])
            for vuln in vulnerabilities:
                writer.writerow([vuln['issue'], vuln['severity'], vuln['file'], vuln['line'], vuln['suggestion']])

      shell: python

    - name: Upload HTML report
      uses: actions/upload-artifact@v2
      with:
        name: HTML-Vulnerability-Report
        path: vulnerability_report.html

    - name: Upload CSV report
      uses: actions/upload-artifact@v2
      with:
        name: CSV-Vulnerability-Report
        path: vulnerability_report.csv
